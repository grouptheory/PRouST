# +++++++++++++++
#   P R o u S T     ---  PNNI Routing Simulation Toolkit  ---
# +++++++++++++++
# Version: 1.0 (Fri Mar  5 14:35:33 EST 1999)
# 
# 			  Copyright (c) 1998
# 		 Naval Research Laboratory (NRL/CCS)
# 			       and the
# 	  Defense Advanced Research Projects Agency (DARPA)
# 
# 			 All Rights Reserved.
# 
# Permission to use, copy, and modify this software and its
# documentation is hereby granted, provided that both the copyright notice and
# this permission notice appear in all copies of the software, derivative
# works or modified versions, and any portions thereof, and that both notices
# appear in supporting documentation.
# 
# NRL AND DARPA ALLOW FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION AND
# DISCLAIM ANY LIABILITY OF ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM
# THE USE OF THIS SOFTWARE.
# 
# NRL and DARPA request users of this software to return modifications,
# improvements or extensions that they make to:
# 
#                 proust-dev@cmf.nrl.navy.mil
#                         -or-
#                Naval Research Laboratory, Code 5590
#                Center for Computation Science
#                Washington, D.C.  20375
# 
# and grant NRL and DARPA the rights to redistribute these changes in
# future upgrades.

# Makefile
# Version: $Id: Makefile,v 1.12 1999/02/26 14:15:26 mountcas Exp $

#*** developer/module we are exposed to during development
OTHER_DEVS = 

LIBEXT = so.0.0

CWD := ${shell pwd}

#*** other libraries we need to link with
OTHER_MODULES = fsm codec FW DS

#*** library sources and associated headers
LIBSRCS =  CallConfiguration.cc Configurator.cc \
	LinkConfiguration.cc SwitchConfiguration.cc
HEADERS  = ${LIBSRCS:%.cc=%.h}

#*** other targets, e.g. linktst.${THIS_DIR}_${OS}
EXECS = linktst_${OS}${LIBTYPE}

#*** files to be compiled for non-library targets
EXECSRCS = linktst.cc

OTHERFILES = Makefile ${EXECSRCS} Configurator.yac Configurator.lex \
	Configurator.test

#
# These files don't belong with the rest of the source files
# because they're generated by bison and flex.  However, the
# object files that the compiler makes from them do belong
# in the library.
#
LOCALSRCS = Configurator.yac.tab.c lex.${LEX_PREFIX}.c

#
# Add the OBJDIR prefix to each of the "local" object files 
# that belong in the library.
#
LOCALOBJS = $(addprefix ${OBJDIR}/,${LOCALSRCS:%.c=%.${OTYPE}})

include ../Make.local

#
# This ensures that the local object files are included in the
# library no matter what.
#
OBJS += ${LOCALOBJS}

CCFLAGS += -DYYDEBUG=1 -DYYERROR_VERBOSE
CCOPTS += -DYYDEBUG=1 -DYYERROR_VERBOSE
LEX_PREFIX = PNNIConfigurator
LEX_ARGS += -P${LEX_PREFIX} -i
YACC_ARGS += -v -p ${LEX_PREFIX}

#*** executables, and the library ${MODULELIB}
all:	library
#${EXECS}
	@true

library:	${MODULELIB} ${OBJDIR} ${OBJS}
	@true

#*** PLEASE test your module linkage before you push it into src
lex.${LEX_PREFIX}.c:	Configurator.yac.tab.c Configurator.lex 
	$(LEX) $(LEX_ARGS) Configurator.lex

YaccFiles: 
	$(YACC) $(YACC_ARGS) Configurator.yac

Configurator.yac.tab.h Configurator.yac.tab.c:	Configurator.yac
	@rm -f Configurator.yac.tab.h Configurator.yac.tab.c
	$(YACC) $(YACC_ARGS) Configurator.yac

${OBJDIR}/Configurator.yac.tab.${OTYPE}:  Configurator.yac.tab.c
	@echo "Hello, parser!"
	${CCC} -D__${OS}__ $(CCFLAGS) ${CCOPTS} ${EXECOPTS} ${INCLUDES} -c $< -o $@

${OBJDIR}/lex.${LEX_PREFIX}.${OTYPE}: lex.${LEX_PREFIX}.c
	@echo "Hello, scanner!" 
	${CCC} -D__${OS}__ $(CCFLAGS) ${CCOPTS} ${EXECOPTS} ${INCLUDES} -c $< -o $@

linktst: linktst_${OS}${LIBTYPE}
	@true

linktst_${OS}${LIBTYPE}:	${EXECSRCS:%.cc=%.${OTYPE}} ${MODULELIB}
	$(C++) -D__${OS}__ $(CCFLAGS) ${EXECOPTS} ${INCLUDES} \
		${EXECSRCS:%.cc=%.${OTYPE}} \
	 ${LINKS} -o linktst_${OS}${LIBTYPE}
	@echo ${MODULE}/${THIS_DIR}/linktst_${OS}${LIBTYPE} is ready.

clean::
	@rm -f *.o *.O *_${OS}* *.yac.tab.* \
	*.yac.output \
	lex.${LEX_PREFIX}.c ../libsim*

depend:: 
	${DependSubDir}
